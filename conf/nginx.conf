daemon off;
user root;
error_log /dev/stdout info;

events {
    worker_connections  1024;
}

http {
    access_log /dev/stdout;

    server {
        server_name localhost;

        mruby_server_context_handler_code '
            s = Nginx::Server.new

            (Docker::Container.me!.exposed_ports.map(&:last) - ENV["YAICHI_EXCLUDED_LISTENING_PORTS"]&.split(",").map(&:to_i).compact).each do |port|
                s.add_listener({address: port.to_s})
            end
        ';

        location /containers/proxiable {
            default_type application/json;

            mruby_content_handler_code '
                Docker::Container.expire_cache!
                me = Docker::Container.me!
                Nginx.echo(JSON.stringify(
                    (Docker::Container.all - [me]).select {|c| c.reachable_from?(me) }.sort_by(&:name).flat_map do |c|
                        me.exposed_ports.select {|_, local| c.listening?(me, local) }.map do |remote, local|
                            {
                                id: c.id,
                                name: c.name,
                                fqdn: c.fqdn,
                                remote_port: remote,
                                local_port: local
                            }
                        end
                    end
                ))
            ';
        }

        location / {
            proxy_pass http://localhost:1234;
        }
    }

     server {
        server_name *.localhost;

        mruby_server_context_handler_code '
            s = Nginx::Server.new

            Docker::Container.me!.exposed_ports.map(&:last).each do |port|
                s.add_listener({address: port.to_s})
            end
        ';

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_http_version 1.1;
            proxy_buffering off;

            proxy_connect_timeout 365d;
            proxy_send_timeout 365d;
            proxy_read_timeout 365d;

            mruby_set $backend /usr/local/nginx/hook/proxy.rb;
            proxy_pass   http://$backend;

            client_max_body_size 0;
        }
    }
}
